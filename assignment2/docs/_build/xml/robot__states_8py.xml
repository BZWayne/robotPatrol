<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="robot__states_8py" kind="file" language="Python">
    <compoundname>robot_states.py</compoundname>
    <innerclass refid="classrobot__states_1_1_robot_state" prot="public">robot_states::RobotState</innerclass>
    <innernamespace refid="namespacerobot__states">robot_states</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacerobot__states" refkind="compound"><highlight class="comment">#!/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">..<sp/>module::<sp/>robot_states</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:platform:<sp/>Unix</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:synopsis:<sp/>the<sp/>robot_states<sp/>python<sp/>script<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">..<sp/>moduleauthor::<sp/>Bauyrzhan<sp/>Zhakanov<sp/>&lt;bauyrzhan.zhakanov@gmail.com&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">Subscribes<sp/>to<sp/>:</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>/odom</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral">Uses<sp/>Service:</highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>/state/set_battery_level</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>/state/get_battery_level<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>/state/get_pose<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>/state/set_base_movement_state<sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>/state/get_base_movement_state</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral">Robot<sp/>states<sp/>is<sp/>the<sp/>script<sp/>where<sp/>the<sp/>robot<sp/>condition<sp/>will<sp/>be<sp/>identified<sp/>such<sp/>as<sp/>battery<sp/>level,<sp/>base<sp/>movement,<sp/>odometry<sp/>information,</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral">its<sp/>pose<sp/>information.<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_control<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logs_mapper<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>anm</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>assignment2.msg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>RoomConnection,<sp/>Point</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>assignment2.srv<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>GetPose,<sp/>GetPoseResponse,<sp/>GetBatteryLevel,<sp/>SetBatteryLevel,<sp/>GetBatteryLevelResponse,<sp/>SetBatteryLevelResponse</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>assignment2.srv<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>GetBaseMovementState,<sp/>GetBaseMovementStateResponse,<sp/>SetBaseMovementState,<sp/>SetBaseMovementStateResponse</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>nav_msgs.msg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Odometry</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">#<sp/>A<sp/>tag<sp/>for<sp/>identifying<sp/>logs<sp/>producer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">node_fsm<sp/>=<sp/>anm.NODE_ROBOT_STATE</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classrobot__states_1_1_robot_state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrobot__states_1_1_robot_state" kindref="compound">RobotState</ref>:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Initializes<sp/>the<sp/>&quot;robot-states&quot;<sp/>node<sp/>to<sp/>provide<sp/>crucial<sp/>information<sp/>about<sp/>the<sp/>robot&apos;s<sp/>current<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>state,<sp/>such<sp/>as<sp/>its<sp/>pose,<sp/>battery<sp/>level,<sp/>and<sp/>base<sp/>movement<sp/>state.</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classrobot__states_1_1_robot_state_1af915ba84f14daac9b0aaa87cec6e62b2" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>the<sp/>&quot;robot-states&quot;</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialize<sp/>a<sp/>robot<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.init_node(anm.NODE_ROBOT_STATE,<sp/>log_level=rospy.INFO)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a0894b6337f559998dbcab19f0343f20e" kindref="member">_pose</ref><sp/>=<sp/>Point()</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a61d1a5d1d85f0b337e75b94b45cd2935" kindref="member">_battery_level</ref><sp/>=<sp/>1000</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1aaffda2e50d2a708c246789e588f575da" kindref="member">_base_movement_state</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>services.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.Service(anm.ROBOT_GET_POSE,<sp/>GetPose,<sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a76199309686fac776fe4427a8e549264" kindref="member">get_pose</ref>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.Service(anm.ROBOT_GET_BATTERY_LEVEL,<sp/>GetBatteryLevel,<sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a0316b600d1220427d72f03c319e3a015" kindref="member">get_battery_level</ref>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.Service(anm.ROBOT_SET_BATTERY_LEVEL,<sp/>SetBatteryLevel,<sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a9d666c94f6af03d229edecdfa0965746" kindref="member">set_battery_level</ref>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.Service(anm.ROBOT_SET_BASE_MOVEMENT_STATE,<sp/>SetBaseMovementState,<sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a61dc95746c214504aa967792d6ee13b4" kindref="member">set_base_movement_state</ref>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.Service(anm.ROBOT_GET_BASE_MOVEMENT_STATE,<sp/>GetBaseMovementState,<sp/>self.<ref refid="classrobot__states_1_1_robot_state_1ac045928829450474bcab6eec5f5cff9b" kindref="member">get_base_movement_state</ref>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.Subscriber(</highlight><highlight class="stringliteral">&quot;odom&quot;</highlight><highlight class="normal">,<sp/>Odometry,<sp/>self.<ref refid="classrobot__states_1_1_robot_state_1ab77b6ffea0224311a5d2f4ba5a3d348f" kindref="member">odom_callback</ref>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Logs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/>(f</highlight><highlight class="stringliteral">&apos;Initialise<sp/>a<sp/>robot<sp/>`{anm.NODE_ROBOT_STATE}`<sp/>with<sp/>services<sp/>`{anm.ROBOT_GET_POSE}`<sp/>and<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&apos;<sp/>`{anm.ROBOT_GET_BATTERY_LEVEL}`<sp/>and<sp/>`{anm.ROBOT_SET_BATTERY_LEVEL}`<sp/>and<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&apos;<sp/>`{anm.ROBOT_GET_BASE_MOVEMENT_STATE}`<sp/>and<sp/>`{anm.ROBOT_SET_BASE_MOVEMENT_STATE}`.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(log_msg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(anm.tag_log(log_msg,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>rospy.is_shutdown():<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1aaffda2e50d2a708c246789e588f575da" kindref="member">_base_movement_state</ref><sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a61d1a5d1d85f0b337e75b94b45cd2935" kindref="member">_battery_level</ref><sp/>-=<sp/>1</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Executed&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.sleep(1)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classrobot__states_1_1_robot_state_1ab77b6ffea0224311a5d2f4ba5a3d348f" kindref="member">odom_callback</ref>(self,<sp/>data):</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Callback<sp/>function<sp/>for<sp/>the<sp/>/odom<sp/>topic<sp/>subscriber<sp/>that<sp/>updates<sp/>the<sp/>robot&apos;s<sp/>current<sp/>pose<sp/>in<sp/>the<sp/>robot-states<sp/>node.</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>argument<sp/>for<sp/>this<sp/>function<sp/>is<sp/>the<sp/>data<sp/>of<sp/>type<sp/>nav_msgs.msg.Odometry.</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a0894b6337f559998dbcab19f0343f20e" kindref="member">_pose</ref>.x<sp/>=<sp/>data.pose.pose.position.x</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a0894b6337f559998dbcab19f0343f20e" kindref="member">_pose</ref>.y<sp/>=<sp/>data.pose.pose.position.y</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classrobot__states_1_1_robot_state_1a76199309686fac776fe4427a8e549264" kindref="member">get_pose</ref>(self,<sp/>request):</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>implementation<sp/>of<sp/>the<sp/>/state/get_pose<sp/>service.<sp/>The<sp/>input<sp/>parameter,<sp/>request,<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>the<sp/>client<sp/>is<sp/>not<sp/>used.<sp/>The<sp/>response<sp/>returned<sp/>to<sp/>the<sp/>client<sp/>contains<sp/>the<sp/>current<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot<sp/>pose.<sp/>The<sp/>argument<sp/>request<sp/>is<sp/>of<sp/>type<sp/>GetPoseRequest.<sp/>The<sp/>returned<sp/>value<sp/>is<sp/>of</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>GetPoseResponse.</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a0894b6337f559998dbcab19f0343f20e" kindref="member">_pose</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(self._pose)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(anm.tag_log(</highlight><highlight class="stringliteral">&apos;Cannot<sp/>get<sp/>a<sp/>robot<sp/>position&apos;</highlight><highlight class="normal">,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/>f</highlight><highlight class="stringliteral">&apos;Get<sp/>a<sp/>robot<sp/>position<sp/>via<sp/>`{anm.ROBOT_GET_POSE}`<sp/>as<sp/>({self._pose.x},<sp/>{self._pose.y})&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(anm.tag_log(log_msg,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>=<sp/>GetPoseResponse()</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.pose<sp/>=<sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a0894b6337f559998dbcab19f0343f20e" kindref="member">_pose</ref></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>response</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classrobot__states_1_1_robot_state_1a9d666c94f6af03d229edecdfa0965746" kindref="member">set_battery_level</ref>(self,<sp/>request):</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>implementation<sp/>of<sp/>the<sp/>state/set_battery_level<sp/>service.</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>input<sp/>parameter<sp/>request<sp/>is<sp/>the<sp/>current<sp/>battery<sp/>level<sp/>of<sp/>the<sp/>robot<sp/>to<sp/>be<sp/>set,<sp/></highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>which<sp/>is<sp/>provided<sp/>by<sp/>the<sp/>client.<sp/>The<sp/>server<sp/>returns<sp/>an<sp/>empty<sp/>response.</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>request.battery_level<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Battery<sp/>level<sp/>is<sp/>fine<sp/>and<sp/>set&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a61d1a5d1d85f0b337e75b94b45cd2935" kindref="member">_battery_level</ref><sp/>=<sp/>request.battery_level</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/>(f</highlight><highlight class="stringliteral">&apos;Set<sp/>current<sp/>robot<sp/>battery<sp/>level<sp/>via<sp/>`{anm.ROBOT_SET_BATTERY_LEVEL}`<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&apos;as<sp/>({self._battery_level}).&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(log_msg)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(anm.tag_log(log_msg,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Error<sp/>with<sp/>battery&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(anm.tag_log(</highlight><highlight class="stringliteral">&apos;Couldnt<sp/>set<sp/>battery<sp/>level&apos;</highlight><highlight class="normal">,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SetBatteryLevelResponse()</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classrobot__states_1_1_robot_state_1a0316b600d1220427d72f03c319e3a015" kindref="member">get_battery_level</ref>(self,<sp/>request):</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>implementation<sp/>of<sp/>the<sp/>state/get_battery_level<sp/>service.<sp/>The<sp/>input<sp/>parameter<sp/>of<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>request<sp/>is<sp/>empty,<sp/>as<sp/>provided<sp/>by<sp/>the<sp/>client.<sp/>The<sp/>response<sp/>returned<sp/>to<sp/>the<sp/>client</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>includes<sp/>the<sp/>current<sp/>battery<sp/>level<sp/>of<sp/>the<sp/>robot.<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:<sp/></highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request<sp/>(GetBatteryLevelRequest).<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>(GetBatteryLevelResponse).</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a61d1a5d1d85f0b337e75b94b45cd2935" kindref="member">_battery_level</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Error<sp/>with<sp/>battery&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(anm.tag_log(</highlight><highlight class="stringliteral">&apos;Could<sp/>not<sp/>get<sp/>battery<sp/>level&apos;</highlight><highlight class="normal">,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/>f</highlight><highlight class="stringliteral">&apos;Get<sp/>battery<sp/>level<sp/>via<sp/>`{anm.ROBOT_GET_BATTERY_LEVEL}`<sp/>as<sp/>({self._battery_level})&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(log_msg)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(anm.tag_log(log_msg,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>=<sp/>GetBatteryLevelResponse()</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.battery_level<sp/>=<sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a61d1a5d1d85f0b337e75b94b45cd2935" kindref="member">_battery_level</ref></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>response</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classrobot__states_1_1_robot_state_1a61dc95746c214504aa967792d6ee13b4" kindref="member">set_base_movement_state</ref>(self,<sp/>request):</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>`state/set_base_movement_state`<sp/>service<sp/>implementation.</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>`request`<sp/>input<sp/>parameter<sp/>is<sp/>the<sp/>current<sp/>robot<sp/>base<sp/>movement<sp/>state<sp/>to<sp/>be<sp/>set,</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>given<sp/>by<sp/>the<sp/>client.<sp/>This<sp/>server<sp/>returns<sp/>an<sp/>empty<sp/>`response`.</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arg:</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request(SetBaseMovementStateRequest)</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>request.base_movement_state<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1aaffda2e50d2a708c246789e588f575da" kindref="member">_base_movement_state</ref><sp/>=<sp/>request.base_movement_state</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/>(f</highlight><highlight class="stringliteral">&apos;Set<sp/>current<sp/>robot<sp/>movement<sp/>state<sp/>through<sp/>`{anm.ROBOT_SET_BASE_MOVEMENT_STATE}`<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&apos;as<sp/>({self._base_movement_state}).&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(anm.tag_log(log_msg,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(anm.tag_log(</highlight><highlight class="stringliteral">&apos;Cannot<sp/>set<sp/>an<sp/>unspecified<sp/>robot<sp/>movement<sp/>state&apos;</highlight><highlight class="normal">,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SetBaseMovementStateResponse()</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classrobot__states_1_1_robot_state_1ac045928829450474bcab6eec5f5cff9b" kindref="member">get_base_movement_state</ref>(self,<sp/>request):</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>implementation<sp/>of<sp/>the<sp/>state/get_base_movement_state<sp/>service.<sp/>The<sp/>request<sp/>parameter<sp/>provided<sp/>by<sp/>the<sp/>client<sp/>is<sp/>empty<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>is<sp/>not<sp/>used.<sp/>The<sp/>response<sp/>returned<sp/>to<sp/>the<sp/>client<sp/>includes<sp/>the<sp/>current<sp/>state<sp/>of<sp/>the<sp/>robot&apos;s<sp/>base<sp/>movement.</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request<sp/>(GetBaseMovementStateRequest)</highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>(GetBaseMovementStateResponse)</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1aaffda2e50d2a708c246789e588f575da" kindref="member">_base_movement_state</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>base<sp/>statement<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(anm.tag_log(</highlight><highlight class="stringliteral">&apos;Could<sp/>not<sp/>get<sp/>movement<sp/>state&apos;</highlight><highlight class="normal">,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;got<sp/>it&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/>f</highlight><highlight class="stringliteral">&apos;Get<sp/>current<sp/>robot<sp/>movement<sp/>state<sp/>through<sp/>`{anm.ROBOT_GET_BASE_MOVEMENT_STATE}`<sp/>as<sp/>({self._base_movement_state})&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(log_msg)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(anm.tag_log(log_msg,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>=<sp/>GetBaseMovementStateResponse()</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.base_movement_state<sp/>=<sp/>self.<ref refid="classrobot__states_1_1_robot_state_1aaffda2e50d2a708c246789e588f575da" kindref="member">_base_movement_state</ref></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>response</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">#<sp/>main</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Launching<sp/>the<sp/>Robot<sp/>State&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrobot__states_1_1_robot_state" kindref="compound">RobotState</ref>()</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.spin()</highlight></codeline>
    </programlisting>
    <location file="/root/ros_ws/src/robotPatrol/assignment2/src/robot_states.py"/>
  </compounddef>
</doxygen>
