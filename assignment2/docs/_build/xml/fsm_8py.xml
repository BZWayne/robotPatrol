<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="fsm_8py" kind="file" language="Python">
    <compoundname>fsm.py</compoundname>
    <innerclass refid="classfsm_1_1_load_map" prot="public">fsm::LoadMap</innerclass>
    <innerclass refid="classfsm_1_1_moving_corridor" prot="public">fsm::MovingCorridor</innerclass>
    <innerclass refid="classfsm_1_1_discover_room" prot="public">fsm::DiscoverRoom</innerclass>
    <innerclass refid="classfsm_1_1_moving_for_battery" prot="public">fsm::MovingForBattery</innerclass>
    <innerclass refid="classfsm_1_1_charging" prot="public">fsm::Charging</innerclass>
    <innernamespace refid="namespacefsm">fsm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacefsm" refkind="compound"><highlight class="comment">#!/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>module::<sp/>fsm</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:platform:<sp/>Unix</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:synopsis:<sp/>the<sp/>fsm<sp/>python<sp/>script</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>moduleauthor::<sp/>Bauyrzhan<sp/>Zhakanov<sp/>&lt;bauyrzhan.zhakanov@gmail.com&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Subscribes<sp/>to:</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/image_id</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Uses<sp/>Service:</highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/state/set_battery_level</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/state/get_pose</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/state/set_base_movement_state</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/room_info</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/move_arm</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Uses<sp/>Action:</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/move_base</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Uses<sp/>helper<sp/>script:</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/utilities/robot_control/map.py</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>finite<sp/>state<sp/>machine&apos;s<sp/>initial<sp/>state<sp/>involves<sp/>building<sp/>a<sp/>semantic<sp/>map<sp/>of</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>environment<sp/>using<sp/>image<sp/>IDs<sp/>of<sp/>markers<sp/>detected<sp/>by<sp/>the<sp/>robot<sp/>camera.<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>node<sp/>updates<sp/>the<sp/>ontology<sp/>using<sp/>the<sp/>map.py<sp/>helper<sp/>script<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>retrieves<sp/>the<sp/>target<sp/>room<sp/>based<sp/>on<sp/>the<sp/>last<sp/>visit<sp/>times<sp/>and<sp/>the<sp/>robot&apos;s<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>battery<sp/>state.<sp/>In<sp/>the<sp/>next<sp/>state,<sp/>the<sp/>robot<sp/>moves<sp/>to<sp/>the<sp/>target<sp/>room,<sp/>and<sp/>if<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>battery<sp/>level<sp/>drops<sp/>below<sp/>a<sp/>threshold,<sp/>the<sp/>robot<sp/>goes<sp/>to<sp/>the<sp/>charger<sp/>to<sp/>recharge.</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>smach</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>smach_ros</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>actionlib</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>move_base_msgs.msg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>MoveBaseAction,<sp/>MoveBaseGoal</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>assignment2.msg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>RoomConnection,<sp/>Point</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>assignment2.srv<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>SetBatteryLevel,<sp/>GetPose,<sp/>SetBaseMovementState,<sp/>RoomInformation</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_control<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logs_mapper<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>anm</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_control.map<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>MapOntology</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>std_msgs.msg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Int32</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>std_srvs.srv<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>SetBool</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>threading<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Lock<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">#<sp/>A<sp/>tag<sp/>for<sp/>identifying<sp/>logs<sp/>producer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">node_fsm<sp/>=<sp/>anm.NODE_FINITE_STATE_MACHINE</highlight></codeline>
<codeline lineno="46"><highlight class="normal">node_time_for_log<sp/>=<sp/>5</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">publisher_<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">ontology<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">threading_lock<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">room_id<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="52"><highlight class="normal">room_name<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="53"><highlight class="normal">room_center<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="54"><highlight class="normal">room_connection<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="55"><highlight class="normal">door<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefsm_1a3263c316692e7570fd5b1b0f6d21d9c8" kindref="member">getRoomId</ref>(data):</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>client<sp/>for<sp/>the<sp/>marker_server<sp/>retrieves<sp/>information<sp/>for<sp/>a<sp/>specific<sp/>room<sp/>using<sp/>the<sp/>room_info<sp/>service.</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>argument<sp/>room_id<sp/>is<sp/>an<sp/>integer<sp/>that<sp/>is<sp/>used<sp/>to<sp/>identify<sp/>the<sp/>room.<sp/>The<sp/>function<sp/>returns<sp/>a<sp/>response<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>in<sp/>the<sp/>form<sp/>of<sp/>resp<sp/>(RoomInformationResponse).&quot;</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.wait_for_service(</highlight><highlight class="stringliteral">&apos;room_info&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>service<sp/>=<sp/>rospy.ServiceProxy(</highlight><highlight class="stringliteral">&apos;room_info&apos;</highlight><highlight class="normal">,<sp/>RoomInformation)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resp<sp/>=<sp/>service(data)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resp<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>rospy.ServiceException<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Service<sp/>call<sp/>failed:<sp/>%s&quot;</highlight><highlight class="normal">%e)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefsm_1ab0b1f3b582926e79d3b4654f3db429b4" kindref="member">getImageId</ref>(data):</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>callback<sp/>function<sp/>for<sp/>the<sp/>subscriber<sp/>of<sp/>the<sp/>/image_id<sp/>topic<sp/>checks<sp/>if<sp/>the<sp/>image<sp/>id<sp/>detected<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>is<sp/>valuable<sp/>and<sp/>has<sp/>not<sp/>already<sp/>been<sp/>recorded.<sp/>If<sp/>so,<sp/>it<sp/>saves<sp/>the<sp/>information<sp/>for<sp/>each<sp/>room<sp/>by<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>calling<sp/>the<sp/>function<sp/>getRoomId(room_id)<sp/>and<sp/>modifies<sp/>the<sp/>ontology<sp/>using<sp/>functions<sp/>from<sp/>the<sp/>helper<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>script<sp/>map.py<sp/>such<sp/>as<sp/>add_room(room),<sp/>add_door(door),<sp/>assign_doors_to_room(room,<sp/>doors),<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>disjoint_individuals(),<sp/>and<sp/>add_last_visit_time(room,<sp/>visit_time).<sp/>The<sp/>argument<sp/>data<sp/>is<sp/>an<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>integer<sp/>that<sp/>represents<sp/>the<sp/>image<sp/>id.</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>room_id</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>room_name</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>room_center</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>room_connection</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>door</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>data.data<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>room_id<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>data.data<sp/>&gt;<sp/>10<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>data.data<sp/>&lt;<sp/>18:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room_id.append(data.data)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room_info<sp/>=<sp/><ref refid="namespacefsm_1a3263c316692e7570fd5b1b0f6d21d9c8" kindref="member">getRoomId</ref>(data.data)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room_name.append(room_info.room)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Semantic<sp/>map<sp/>updated,<sp/>room<sp/>&apos;</highlight><highlight class="normal">+<sp/>room_info.room<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>detected&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(anm.tag_log(log_msg,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ontology.add_room(room_info.room)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room_center.append([room_info.x,<sp/>room_info.y])</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Center<sp/>position<sp/>is:<sp/>[%f,<sp/>%f]&apos;</highlight><highlight class="normal"><sp/>%<sp/>(room_info.x,<sp/>room_info.y)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(anm.tag_log(log_msg,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(room_info.connections)):</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room_connection.append(room_info.connections[i].connected_to)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>door.append(room_info.connections[i].through_door)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Room<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>room_info.room<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>is<sp/>connected<sp/>to<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>room_info.connections[i].connected_to<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>via<sp/>door<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>room_info.connections[i].through_door</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(anm.tag_log(log_msg,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ontology.add_door(room_info.connections[i].through_door)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ontology.assign_doors_to_room(room_info.room,<sp/>room_info.connections[i].through_door)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ontology.disjoint_individuals()</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ontology.add_last_visit_time(room_info.room,<sp/>str(room_info.visit_time))</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefsm_1afddd53706d07515fcf2045283ca2d015" kindref="member">movingPose</ref>(data):</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>function<sp/>serves<sp/>as<sp/>an<sp/>action<sp/>client<sp/>for<sp/>the<sp/>&quot;move_base&quot;<sp/>node.<sp/>It<sp/>takes<sp/>a<sp/>pose<sp/>as<sp/>an<sp/>argument<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>sends<sp/>it<sp/>in<sp/>the<sp/>form<sp/>of<sp/>&quot;MoveBaseGoal.msg&quot;<sp/>to<sp/>the<sp/>action<sp/>server.<sp/>The<sp/>function<sp/>returns<sp/>the<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>result<sp/>in<sp/>the<sp/>form<sp/>of<sp/>&quot;MoveBaseResult.msg&quot;.</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>client<sp/>=<sp/>actionlib.SimpleActionClient(</highlight><highlight class="stringliteral">&apos;move_base&apos;</highlight><highlight class="normal">,MoveBaseAction)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>goal<sp/>=<sp/>MoveBaseGoal()</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>goal.target_pose.header.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>goal.target_pose.header.stamp<sp/>=<sp/>rospy.Time.now()</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>goal.target_pose.pose.position.x<sp/>=<sp/>data.x</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>goal.target_pose.pose.position.y<sp/>=<sp/>data.y</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>goal.target_pose.pose.orientation.w<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>client.wait_for_server()</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>client.send_goal(goal)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefsm_1a80cc0a3d8d94a43d9a7b03ad99ec7bac" kindref="member">getConfirmation</ref>(data):</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Determines<sp/>if<sp/>the<sp/>robot<sp/>has<sp/>arrived<sp/>at<sp/>a<sp/>specific<sp/>point<sp/>by<sp/>calculating<sp/>the<sp/>Euclidean<sp/>distance<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>between<sp/>the<sp/>robot&apos;s<sp/>current<sp/>pose<sp/>and<sp/>the<sp/>target<sp/>pose.</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_pose<sp/>(Point):<sp/>The<sp/>desired<sp/>location<sp/>for<sp/>the<sp/>robot<sp/>to<sp/>reach.</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reached<sp/>(Bool):<sp/>Indicates<sp/>whether<sp/>or<sp/>not<sp/>the<sp/>robot<sp/>has<sp/>arrived<sp/>at<sp/>the<sp/>target<sp/>pose.</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.wait_for_service(anm.ROBOT_GET_POSE)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>service<sp/>=<sp/>rospy.ServiceProxy(anm.ROBOT_GET_POSE,<sp/>GetPose)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>=<sp/>service()</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pose<sp/>=<sp/>response.pose</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>math.sqrt((data.x<sp/>-<sp/>pose.x)**2<sp/>+<sp/>(data.y<sp/>-<sp/>pose.y)**2)<sp/>&lt;<sp/>1:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reached<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reached<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;target<sp/>reached<sp/>state:<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(reached)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(anm.tag_log(log_msg,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reached</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>rospy.ServiceException<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/>f</highlight><highlight class="stringliteral">&apos;Server<sp/>cannot<sp/>get<sp/>current<sp/>robot<sp/>position:<sp/>{e}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(anm.tag_log(log_msg,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefsm_1a262573032986a4c57bab1779dcc8dbb9" kindref="member">getRoomLocation</ref>(data):</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>detects<sp/>the<sp/>center<sp/>position<sp/>of<sp/>a<sp/>specific<sp/>room<sp/>by<sp/>using<sp/>the<sp/>room<sp/>information.</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room<sp/>(string):<sp/>the<sp/>name<sp/>of<sp/>the<sp/>room<sp/>to<sp/>detect<sp/>the<sp/>center<sp/>position<sp/>of</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room_pose<sp/>(Point):<sp/>the<sp/>center<sp/>position<sp/>of<sp/>the<sp/>specified<sp/>room</highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>room_name</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>room_center</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>room_pose<sp/>=<sp/>Point()</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>room_index<sp/>=<sp/>room_name.index(data)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>room_pose.x<sp/>=<sp/>room_center[room_index][0]</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>room_pose.y<sp/>=<sp/>room_center[room_index][1]</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>room_pose</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefsm_1a12f66437cff11b813cffb3f62f10c7a1" kindref="member">battery_data</ref>(data):</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Updates<sp/>the<sp/>battery<sp/>level<sp/>of<sp/>the<sp/>robot<sp/>by<sp/>using<sp/>the<sp/>/state/battery_data<sp/>service.</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>current<sp/>level<sp/>of<sp/>the<sp/>robot&apos;s<sp/>battery<sp/>is<sp/>stored<sp/>in<sp/>the<sp/>robot-state<sp/>node.</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.wait_for_service(anm.ROBOT_SET_BATTERY_LEVEL)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/>f</highlight><highlight class="stringliteral">&apos;Set<sp/>a<sp/>battery<sp/>level<sp/>to<sp/>the<sp/>`{anm.ROBOT_SET_BATTERY_LEVEL}`<sp/>node.&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(anm.tag_log(log_msg,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>service<sp/>=<sp/>rospy.ServiceProxy(anm.ROBOT_SET_BATTERY_LEVEL,<sp/>SetBatteryLevel)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>service(data)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>rospy.ServiceException<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/>f</highlight><highlight class="stringliteral">&apos;Cannot<sp/>set<sp/>current<sp/>robot<sp/>battery<sp/>level:<sp/>{e}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(anm.tag_log(log_msg,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefsm_1af67440a6ede0f8267a125c60438dc55c" kindref="member">setArmMotion</ref>(data):</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Updates<sp/>the<sp/>arm<sp/>movement<sp/>state<sp/>of<sp/>the<sp/>robot<sp/>through<sp/>the<sp/>service<sp/>client<sp/>for<sp/>/move_arm<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>stored<sp/>in<sp/>the<sp/>robotik<sp/>node.</highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.wait_for_service(</highlight><highlight class="stringliteral">&apos;/move_arm&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Moving<sp/>an<sp/>arm<sp/>to<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(data)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(anm.tag_log(log_msg,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>service<sp/>=<sp/>rospy.ServiceProxy(</highlight><highlight class="stringliteral">&apos;move_arm&apos;</highlight><highlight class="normal">,<sp/>SetBool)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>service(data)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>rospy.ServiceException<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/>f</highlight><highlight class="stringliteral">&apos;Cannot<sp/>set<sp/>a<sp/>arm<sp/>movement:<sp/>{e}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(anm.tag_log(log_msg,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefsm_1ad236d81c522878af5d0ffbf171730d90" kindref="member">base_data</ref>(data):</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Service<sp/>client<sp/>function<sp/>for<sp/>/state/set_base_movement_state.<sp/>Modifies<sp/>the<sp/>robot&apos;s<sp/>base<sp/>movement<sp/></highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>state<sp/>stored<sp/>in<sp/>the<sp/>robot-states<sp/>node.</highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.wait_for_service(anm.ROBOT_SET_BASE_MOVEMENT_STATE)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Setting<sp/>base<sp/>movement<sp/>state<sp/>to<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(data)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(anm.tag_log(log_msg,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>service<sp/>=<sp/>rospy.ServiceProxy(anm.ROBOT_SET_BASE_MOVEMENT_STATE,<sp/>SetBaseMovementState)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>service(data)<sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>rospy.ServiceException<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/>f</highlight><highlight class="stringliteral">&apos;Cannot<sp/>set<sp/>base<sp/>movement:<sp/>{e}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(anm.tag_log(log_msg,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="classfsm_1_1_load_map" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfsm_1_1_load_map" kindref="compound">LoadMap</ref>(smach.State):</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>initial<sp/>state<sp/>is<sp/>defined<sp/>as<sp/>building<sp/>a<sp/>semantic<sp/>map<sp/>for<sp/>the<sp/>robot.<sp/>The<sp/>arm<sp/>of<sp/>the<sp/>robot<sp/>is<sp/>set<sp/>to<sp/>move<sp/>along</highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>desired<sp/>trajectories<sp/>as<sp/>defined<sp/>in<sp/>the<sp/>robotik.cpp<sp/>file<sp/>using<sp/>the<sp/>setArmMotion(data)<sp/>function.<sp/>If<sp/>sufficient<sp/>room<sp/></highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>IDs<sp/>are<sp/>detected,<sp/>the<sp/>state<sp/>will<sp/>exit<sp/>and<sp/>return<sp/>the<sp/>status<sp/>of<sp/>map_loaded.</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfsm_1_1_load_map_1a9f03d880e91debcd6799c9647545e15d" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialize<sp/>the<sp/>execution<sp/>with<sp/>map_loaded<sp/>state</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.State.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&apos;map_loaded&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfsm_1_1_load_map_1a817a5ced67270971c6eda09a60b0d5c2" kindref="member">execute</ref>(self,<sp/>userdata):</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Execute<sp/>the<sp/>LoadMap()<sp/>state</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>threading_lock</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>room_id</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefsm_1af67440a6ede0f8267a125c60438dc55c" kindref="member">setArmMotion</ref>(</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>rospy.is_shutdown():<sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threading_lock.acquire()</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(room_id)<sp/>&gt;<sp/>6:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;map_loaded&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>except:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>return<sp/>&apos;map_not_loaded&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threading_lock.release()</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.sleep(node_time_for_log)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="classfsm_1_1_moving_corridor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfsm_1_1_moving_corridor" kindref="compound">MovingCorridor</ref>(smach.State):</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="251"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>state<sp/>where<sp/>the<sp/>robot<sp/>moves<sp/>to<sp/>a<sp/>desired<sp/>location<sp/>is<sp/>defined<sp/>in<sp/>this<sp/>code.<sp/></highlight></codeline>
<codeline lineno="252"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>First,<sp/>the<sp/>function<sp/>set_base_movement_state(base_movement_state)<sp/>is<sp/>used<sp/>to<sp/>enable<sp/>battery<sp/></highlight></codeline>
<codeline lineno="253"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>consumption.<sp/>Then,<sp/>the<sp/>robot<sp/>moves<sp/>to<sp/>the<sp/>target<sp/>room<sp/>with<sp/>the<sp/>help<sp/>of<sp/>the<sp/>function<sp/></highlight></codeline>
<codeline lineno="254"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>movingPose(pose).<sp/>As<sp/>the<sp/>robot<sp/>moves<sp/>to<sp/>its<sp/>destination,<sp/>the<sp/>ontology<sp/>is<sp/>updated<sp/>with<sp/></highlight></codeline>
<codeline lineno="255"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>function<sp/>update_ontology(now).<sp/>When<sp/>the<sp/>robot<sp/>reaches<sp/>its<sp/>target<sp/>room,<sp/>the<sp/>state<sp/>is<sp/></highlight></codeline>
<codeline lineno="256"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>exited<sp/>and<sp/>the<sp/>function<sp/>returns<sp/>reached.<sp/>If<sp/>the<sp/>battery<sp/>level<sp/>drops<sp/>below<sp/>the<sp/>threshold,<sp/></highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>function<sp/>returns<sp/>battery_low<sp/>and<sp/>the<sp/>target<sp/>room<sp/>is<sp/>cancelled.</highlight></codeline>
<codeline lineno="258"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfsm_1_1_moving_corridor_1a51966053c054fb363c2f0699ffc781c0" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="261"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialize<sp/>the<sp/>execution<sp/>with<sp/>reached<sp/>or<sp/>battery_low<sp/>states</highlight></codeline>
<codeline lineno="262"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.State.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&apos;reached&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;battery_low&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfsm_1_1_moving_corridor_1ae3161c083a90dfe519b63aa840668bcd" kindref="member">execute</ref>(self,<sp/>userdata):</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Excecute<sp/>MovintCorridor()<sp/>state</highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>threading_lock</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>ontology</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>=<sp/>rospy.get_rostime()</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[target_room,<sp/>battery_low]<sp/>=<sp/>ontology.update_ontology(now)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_room_pose<sp/>=<sp/><ref refid="namespacefsm_1a262573032986a4c57bab1779dcc8dbb9" kindref="member">getRoomLocation</ref>(target_room)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefsm_1ad236d81c522878af5d0ffbf171730d90" kindref="member">base_data</ref>(</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefsm_1afddd53706d07515fcf2045283ca2d015" kindref="member">movingPose</ref>(target_room_pose)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>rospy.is_shutdown():<sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threading_lock.acquire()</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>=<sp/>rospy.get_rostime()</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[next_target_room,<sp/>battery_low]<sp/>=<sp/>ontology.update_ontology(now)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;target<sp/>room:<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>target_room</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(anm.tag_log(log_msg,<sp/>node_fsm))</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>battery_low:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;battery_low&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reached<sp/>=<sp/><ref refid="namespacefsm_1a80cc0a3d8d94a43d9a7b03ad99ec7bac" kindref="member">getConfirmation</ref>(target_room_pose)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>reached:</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefsm_1ad236d81c522878af5d0ffbf171730d90" kindref="member">base_data</ref>(</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;reached&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threading_lock.release()</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.sleep(node_time_for_log)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="classfsm_1_1_discover_room" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfsm_1_1_discover_room" kindref="compound">DiscoverRoom</ref>(smach.State):</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="300"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Defines<sp/>the<sp/>state<sp/>where<sp/>the<sp/>robot<sp/>has<sp/>arrived<sp/>at<sp/>the<sp/>target<sp/>room<sp/>and<sp/>begins<sp/>to<sp/>explore<sp/>it.<sp/></highlight></codeline>
<codeline lineno="301"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>robot<sp/>arm&apos;s<sp/>movement<sp/>is<sp/>enabled<sp/>just<sp/>like<sp/>in<sp/>the<sp/>initial<sp/>state<sp/>using<sp/>the<sp/>setArmMotion(data)<sp/></highlight></codeline>
<codeline lineno="302"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function,<sp/>and<sp/>then<sp/>it<sp/>returns<sp/>discovered.</highlight></codeline>
<codeline lineno="303"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfsm_1_1_discover_room_1a6be8c35e02cf009d4213aee1ecbb91c9" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="306"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialize<sp/>the<sp/>execution<sp/>with<sp/>discovered<sp/>state</highlight></codeline>
<codeline lineno="307"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.State.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&apos;discovered&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfsm_1_1_discover_room_1abcef0b5f8609c3755ff80ca94d9c2085" kindref="member">execute</ref>(self,<sp/>userdata):</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="312"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Executes<sp/>DiscoverRoom()<sp/>state</highlight></codeline>
<codeline lineno="313"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>threading_lock</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>ontology</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>rospy.is_shutdown():<sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threading_lock.acquire()</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefsm_1af67440a6ede0f8267a125c60438dc55c" kindref="member">setArmMotion</ref>(</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;discovered&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threading_lock.release()</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="classfsm_1_1_moving_for_battery" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfsm_1_1_moving_for_battery" kindref="compound">MovingForBattery</ref>(smach.State):</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="329"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>state<sp/>when<sp/>the<sp/>battery<sp/>is<sp/>low<sp/>and<sp/>the<sp/>robot<sp/>needs<sp/>to<sp/>recharge<sp/>is<sp/>defined.<sp/></highlight></codeline>
<codeline lineno="330"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>function<sp/>set_base_movement_state(movement_state)<sp/>is<sp/>used<sp/>to<sp/>enable<sp/>battery<sp/></highlight></codeline>
<codeline lineno="331"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>consumption,<sp/>and<sp/>the<sp/>robot<sp/>moves<sp/>towards<sp/>the<sp/>charger<sp/>using<sp/>the<sp/>movingPose(pose)<sp/></highlight></codeline>
<codeline lineno="332"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function.<sp/>The<sp/>ontology<sp/>is<sp/>updated<sp/>during<sp/>the<sp/>movement<sp/>to<sp/>the<sp/>charger<sp/>using<sp/>the<sp/></highlight></codeline>
<codeline lineno="333"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>update_ontology(now)<sp/>function<sp/>until<sp/>the<sp/>robot<sp/>reaches<sp/>the<sp/>charger.&quot;</highlight></codeline>
<codeline lineno="334"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="335"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfsm_1_1_moving_for_battery_1a85f8b87e44fdd21a90414270c58e152b" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="338"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialize<sp/>the<sp/>execution<sp/>with<sp/>reached<sp/>state</highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.State.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&apos;reached&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfsm_1_1_moving_for_battery_1a6770def0ab75269db10a7183f2ce9092" kindref="member">execute</ref>(self,<sp/>userdata):</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="344"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Executes<sp/>MovingForBattery()<sp/>state</highlight></codeline>
<codeline lineno="345"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>threading_lock</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>ontology</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>=<sp/>rospy.get_rostime()</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ontology.update_ontology(now)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_room_pose<sp/>=<sp/><ref refid="namespacefsm_1a262573032986a4c57bab1779dcc8dbb9" kindref="member">getRoomLocation</ref>(</highlight><highlight class="stringliteral">&apos;E&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefsm_1ad236d81c522878af5d0ffbf171730d90" kindref="member">base_data</ref>(</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefsm_1afddd53706d07515fcf2045283ca2d015" kindref="member">movingPose</ref>(target_room_pose)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>rospy.is_shutdown():<sp/><sp/></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threading_lock.acquire()</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>=<sp/>rospy.get_rostime()</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ontology.update_ontology(now)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reached<sp/>=<sp/><ref refid="namespacefsm_1a80cc0a3d8d94a43d9a7b03ad99ec7bac" kindref="member">getConfirmation</ref>(target_room_pose)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>reached:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefsm_1ad236d81c522878af5d0ffbf171730d90" kindref="member">base_data</ref>(</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;reached&apos;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threading_lock.release()</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.sleep(node_time_for_log)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="classfsm_1_1_charging" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfsm_1_1_charging" kindref="compound">Charging</ref>(smach.State):</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="373"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>state<sp/>is<sp/>called<sp/>Charging()<sp/>and<sp/>it<sp/>activates<sp/>the<sp/>robot<sp/>has<sp/>reached<sp/>the<sp/>charging<sp/>station<sp/>and<sp/></highlight></codeline>
<codeline lineno="374"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>recharges<sp/>the<sp/>battery.<sp/>The<sp/>battery<sp/>level<sp/>is<sp/>updated<sp/>using<sp/>the<sp/>set_battery_level(battery_level)<sp/></highlight></codeline>
<codeline lineno="375"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>after<sp/>a<sp/>certain<sp/>period<sp/>of<sp/>time<sp/>has<sp/>elapsed.<sp/>The<sp/>state<sp/>then<sp/>transitions<sp/>to<sp/>charged.</highlight></codeline>
<codeline lineno="376"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfsm_1_1_charging_1a618a204cf27e41f5c2f618c456467695" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialize<sp/>the<sp/>execution<sp/>with<sp/>charged<sp/>state</highlight></codeline>
<codeline lineno="380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.State.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&apos;charged&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfsm_1_1_charging_1abaa7442b794d679197875a3b4fa154b2" kindref="member">execute</ref>(self,<sp/>userdata):</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="385"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Executes<sp/>Charging()<sp/>state</highlight></codeline>
<codeline lineno="386"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>threading_lock</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>ontology</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>rospy.is_shutdown():<sp/><sp/></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threading_lock.acquire()</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>=<sp/>rospy.get_rostime()</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ontology.update_ontology(now)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.sleep(10)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefsm_1a12f66437cff11b813cffb3f62f10c7a1" kindref="member">battery_data</ref>(1000)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;charged&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threading_lock.release()</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefsm_1a973dbd0b67087a3e7a64abd7ae573b99" kindref="member">main</ref>():</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="405"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>main<sp/>function<sp/>for<sp/>the<sp/>finite_state_machine<sp/>node<sp/>initializes<sp/>the<sp/>node<sp/>and<sp/>takes<sp/>an<sp/>instance<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="406"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>MapOntology<sp/>class<sp/>at<sp/>the<sp/>current<sp/>time.<sp/>It<sp/>defines<sp/>a<sp/>subscriber<sp/>for<sp/>the<sp/>/image_id<sp/>topic<sp/>and<sp/>outlines<sp/>the</highlight></codeline>
<codeline lineno="407"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>states<sp/>and<sp/>transitions<sp/>for<sp/>the<sp/>finite<sp/>state<sp/>machine&apos;s<sp/>topological<sp/>map.<sp/>Finally,<sp/>it<sp/>starts<sp/>the<sp/>finite<sp/>state<sp/>machine<sp/>process.</highlight></codeline>
<codeline lineno="408"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialise<sp/>this<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>ontology</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>publisher_</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>threading_lock</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.init_node(node_fsm,<sp/>log_level=rospy.INFO)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>now<sp/>=<sp/>rospy.get_rostime()</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>ontology<sp/>=<sp/>MapOntology(node_fsm,<sp/>now)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>or<sp/>create<sp/>a<sp/>new<sp/>threading_lock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>threading_lock<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threading_lock<sp/>=<sp/>Lock()</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threading_lock<sp/>=<sp/>threading_lock</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Subscribe<sp/>image<sp/>id<sp/>to<sp/>get<sp/>rooms<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.Subscriber(</highlight><highlight class="stringliteral">&apos;/image_id&apos;</highlight><highlight class="normal">,<sp/>Int32,<sp/>getImageId)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>a<sp/>SMACH<sp/>state<sp/>machine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>robot_sm<sp/>=<sp/>smach.StateMachine(outcomes=[])</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>robot_sm.userdata.sm_counter<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Open<sp/>the<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>robot_sm:</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>states<sp/>to<sp/>the<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;Load_Map&apos;</highlight><highlight class="normal">,<sp/><ref refid="classfsm_1_1_load_map" kindref="compound">LoadMap</ref>(),<sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;map_loaded&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;Moving_Corridor&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;Moving_Corridor&apos;</highlight><highlight class="normal">,<sp/><ref refid="classfsm_1_1_moving_corridor" kindref="compound">MovingCorridor</ref>(),<sp/></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;battery_low&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;Moving_For_Battery&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;reached&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;Discover_Room&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;Moving_For_Battery&apos;</highlight><highlight class="normal">,<sp/><ref refid="classfsm_1_1_moving_for_battery" kindref="compound">MovingForBattery</ref>(),<sp/></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;reached&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;Charging&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;Discover_Room&apos;</highlight><highlight class="normal">,<sp/><ref refid="classfsm_1_1_discover_room" kindref="compound">DiscoverRoom</ref>(),<sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;discovered&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;Moving_Corridor&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;Charging&apos;</highlight><highlight class="normal">,<sp/><ref refid="classfsm_1_1_charging" kindref="compound">Charging</ref>(),<sp/></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;charged&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;Moving_Corridor&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>and<sp/>start<sp/>the<sp/>introspection<sp/>for<sp/>visualization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>sis<sp/>=<sp/>smach_ros.IntrospectionServer(</highlight><highlight class="stringliteral">&apos;server_name&apos;</highlight><highlight class="normal">,<sp/>robot_sm,<sp/></highlight><highlight class="stringliteral">&apos;/SM_ROOT&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>sis.start()</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Execute<sp/>the<sp/>smach</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>outcome<sp/>=<sp/>robot_sm.execute()</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Wait<sp/>for<sp/>ctrl-c<sp/>to<sp/>stop<sp/>the<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.spin()</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>sis.stop()</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacefsm_1a973dbd0b67087a3e7a64abd7ae573b99" kindref="member">main</ref>()</highlight></codeline>
    </programlisting>
    <location file="/root/ros_ws/src/robotPatrol/assignment2/src/fsm.py"/>
  </compounddef>
</doxygen>
